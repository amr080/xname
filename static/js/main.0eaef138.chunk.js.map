{"version":3,"sources":["models/ContractBase.ts","models/index.ts","consts/allActions.js","services/WasmService.ts","services/NameContractService.ts","Components/Button/Button.js","Components/Popup/Popup.js","Components/Input/Input.js","Components/Loading/Loading.js","Components/Dropdown/Dropdown.js","Components/Actions/ActionContainer.js","Components/Actions/Action.js","Components/Actions/Connect.js","Components/Actions/Disconnect.js","Components/Headers/index.tsx","Components/RegisterName/RegisterName.tsx","util/ConversionUtil.ts","Components/Tabs/Tabs.tsx","Components/NameList/NameList.tsx","Components/NameLookup/NameLookup.tsx","Components/AddressLink/AddressLink.js","Components/Display/index.tsx","Components/NameSearch/NameSearch.tsx","App.js","version.js","index.js","consts/network.ts","services/index.ts","consts/colors.ts","models/NameContract.ts"],"names":["ContractMsg","JSON","stringify","this","WasmService","nameQueryClient","NameQueryClient","GRPC_URL","wasmQueryClient","WasmQueryClient","name","Promise","resolve","reject","QueryResolveRequest","setName","error","res","Error","code","message","getAddress","contractAddress","query","queryData","Buffer","from","toString","smartContractState","QuerySmartContractStateRequest","setAddress","setQueryData","parse","getData_asU8","NameContractService","rootName","wasmService","a","lookupContractByName","getContractAddress","QuerySettings","queryWasmCustom","address","QueryNamesByAddress","queryRes","names","QueryAddressByName","search","SearchNamesRequest","all","getContractConfig","contractAddr","contractConfig","MsgExecuteContract","setMsg","RegisterName","toJson","setFundsList","Coin","setAmount","fee_amount","setDenom","FEE_DENOM","setContract","setSender","any","Any","setTypeUrl","setValue","serializeBinary","StyledButton","styled","button","width","color","disabled","ButtonContent","div","Button","className","onClick","children","title","type","loading","handleClick","toUpperCase","onKeyPress","e","key","defaultProps","PopupContainer","SlideInAnimation","keyframes","SlideOutAnimation","PopupContent","status","isClosing","CloseIcon","Content","Popup","onClose","delay","useState","setIsClosing","useEffect","delayCloseTimeout","setTimeout","clearTimeout","toLowerCase","InputContainer","StyledInput","input","Colors","DARK","Label","label","Input","value","onChange","placeholder","target","Svg","svg","Loading","height","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","Container","Group","SelectContainer","StyledSelect","select","LIGHT","DropdownIcon","TEXT","Dropdown","options","initialValue","htmlFor","map","index","isLoading","justify","noMargin","ActionContainer","method","setPopup","fields","buttonTxt","windowMessage","useWalletConnect","walletConnectService","walletConnectState","WINDOW_MESSAGES","windowMessageLookup","windowMsgComplete","windowMsgFailed","initialInputValues","forEach","inputValues","setInputValues","addListener","result","console","log","removeAllListeners","newInputValues","changeInputValue","Object","keys","length","Info","Connect","CONNECTED","connect","Disconnect","DISCONNECT","disconnect","Header","h1","SubHeader","h2","onRegister","newName","setNewName","registering","setRegistering","nameValid","trim","RegisterWrapper","n","then","finally","ConversionUtil","balanceResponse","nhash","balancesList","find","coin","denom","amount","convertNanoHashToHash","nanoHash","TabContainerWrapper","TabHeaderWrapper","TabHeader","active","DARKEN","TabWrapper","TabContainer","tabs","selected","setSelected","tab","i","element","NameList","ul","Name","li","Results","SearchError","WARN","NameLookupWrapper","NameLookup","val","submitting","setSubmitting","lookupType","setLookupType","results","setResults","additionalNames","setAdditionalNames","resultTerm","setResultTerm","searchError","setSearchError","nameService","ROOT_NAME","handleLookup","resolveName","listNames","otherNames","filter","t","slice","v","Text","p","AddressLink","href","EXPLORER_URL","rel","BigParagraph","SearchResults","NameSearchWrapper","NameSearch","searchValue","setSearchValue","searchResults","setSearchResults","debouncedSearch","useDebouncedCallback","searchNames","searchResultArray","catch","text","Wrapper","PRIMARY_BACKGROUND","TEXT_ACCENT","HomeContainer","App","popupContent","setPopupContent","popupStatus","setPopupStatus","popupDuration","setPopupDuration","hashAmount","setHashAmount","listenersAdded","setListenersAdded","wcs","connected","peer","duration","nameContractService","registeredNames","setRegisteredNames","fetchNames","grpcService","useWallet","fetchBalance","getBalancesList","balances","getHashBalance","WINDOW_MESSAGE","CUSTOM_ACTION_COMPLETE","CUSTOM_ACTION_FAILED","url","generateNameRegisterBase64Message","description","customAction","QRCodeModal","ReactDOM","render","network","NETWORK","grpcServiceAddress","walletUrl","WALLET_URL","document","getElementById","process","PRODUCTION","query_names_by_address","query_address_by_name","search_for_names","query_request","register"],"mappings":"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","file":"static/js/main.0eaef138.chunk.js","sourcesContent":["export class ContractMsg {\n    toJson(): string {\n        return JSON.stringify(this)\n    }\n}","export * from './NameContract'\nexport * from './ContractBase'","export const ALL_ACTIONS = [\n  // ----------------------------------\n  // Activate Request Method/Action\n  // ----------------------------------\n  {\n    windowMessage: 'ACTIVATE_REQUEST',\n    method: 'activateRequest',\n    buttonTxt: 'Activate Request',\n    fields: [\n      {\n        name: 'denom',\n        label: 'Marker Denom',\n        value: 'myNewMarker',\n        placeholder: 'Enter Marker Denom',\n        width: '30%',\n      },\n      {\n        name: 'administrator',\n        label: 'Administrator',\n        value: 'tp194r5us3l3yg7rpwepn9c7awgcesp5kp84r5lye',\n        placeholder: 'Enter Administrator Address',\n        width: '70%',\n      },\n    ],\n  },\n  // ----------------------------------\n  // Add Marker Method/Action\n  // ----------------------------------\n  {\n    windowMessage: 'ADD_MARKER',\n    method: 'addMarker',\n    buttonTxt: 'Add Marker',\n    fields: [\n      {\n        name: 'denom',\n        label: 'Marker Denom',\n        value: 'myNewMarker',\n        placeholder: 'Enter Marker Denom',\n        width: '80%',\n      },\n      {\n        name: 'amount',\n        label: 'Amount',\n        value: '1',\n        placeholder: 'Enter Marker Amount',\n        width: '20%',\n      },\n    ],\n  },\n  // ------------------------------\n  // Cancel Request Method/Action\n  // ------------------------------\n  {\n    windowMessage: 'CANCEL_REQUEST',\n    method: 'cancelRequest',\n    buttonTxt: 'Cancel Request',\n    fields: [\n      {\n        name: 'denom',\n        label: 'Marker Denom',\n        value: 'myNewMarker',\n        placeholder: 'Enter Marker Denom',\n        width: '30%',\n      },\n      {\n        name: 'administrator',\n        label: 'Administrator',\n        value: 'tp194r5us3l3yg7rpwepn9c7awgcesp5kp84r5lye',\n        placeholder: 'Enter Administrator Address',\n        width: '70%',\n      },\n    ],\n  },\n  // ------------------------------\n  // Cancel Request Method/Action\n  // ------------------------------\n  {\n    windowMessage: 'CUSTOM_ACTION',\n    method: 'customAction',\n    buttonTxt: 'Run Custom Action',\n    fields: [\n      {\n        name: 'data',\n        label: 'Custom Data',\n        value: '',\n        placeholder: 'Enter Custom Data',\n      },\n    ],\n  },\n  // ----------------------------------\n  // Delegate Hash Method/Action\n  // ----------------------------------\n  {\n    windowMessage: 'DELEGATE_HASH',\n    method: 'delegateHash',\n    buttonTxt: 'Delegate Hash',\n    fields: [\n      {\n        name: 'validatorAddress',\n        label: 'Delegate To',\n        value: 'tpvaloper1tgq6cpu6hmsrvkvdu82j99tsxxw7qqajn843fe',\n        placeholder: 'Enter Address',\n        width: '80%',\n      },\n      {\n        name: 'amount',\n        label: 'Amount',\n        value: '1',\n        placeholder: 'Enter Delegation Amount',\n        width: '20%',\n      },\n    ],\n  },\n  // ----------------------------------\n  // Send Hash Method/Action\n  // ----------------------------------\n  {\n    windowMessage: 'TRANSACTION',\n    method: 'sendHash',\n    buttonTxt: 'Send Hash',\n    fields: [\n      {\n        name: 'to',\n        label: 'Hash To',\n        value: 'tp1vxlcxp2vjnyjuw6mqn9d8cq62ceu6lllpushy6',\n        placeholder: 'Enter Address',\n        width: '80%',\n      },\n      {\n        name: 'amount',\n        label: 'Amount',\n        value: '10',\n        placeholder: 'Enter Send Amount',\n        width: '20%',\n      },\n    ],\n  },\n  // ------------------------------\n  // Sign JWT Method/Action\n  // ------------------------------\n  {\n    windowMessage: 'SIGN_JWT',\n    method: 'signJWT',\n    buttonTxt: 'Sign JWT',\n  },\n  // ----------------------------------\n  // Sign Message Method/Action\n  // ----------------------------------\n  {\n    windowMessage: 'SIGNATURE',\n    method: 'signMessage',\n    buttonTxt: 'Sign Message',\n    fields: [\n      {\n        value: 'WalletConnect-JS | WebDemo | Sign Message',\n        label: 'Message',\n        placeholder: 'Enter Message',\n        name: 'message',\n      },\n    ],\n  },\n  // ------------------------------\n  // Write Scope Method/Action\n  // ------------------------------\n  {\n    windowMessage: 'WRITE_SCOPE',\n    method: 'writeScope',\n    buttonTxt: 'Write Scope',\n    fields: [\n      {\n        name: 'scope',\n        label: 'Scope',\n        value: 'myScope',\n        placeholder: 'Enter Scope',\n        width: '25%',\n      },\n      {\n        name: 'signersList',\n        label: 'Signers List',\n        value: '[]',\n        placeholder: 'Enter Signers List',\n        width: '25%',\n      },\n      {\n        name: 'scopeUuid',\n        label: 'Scope Uuid',\n        value: '',\n        placeholder: 'Enter Scope Uuid',\n        width: '25%',\n      },\n      {\n        name: 'specUuid',\n        label: 'Spec Uuid',\n        value: '',\n        placeholder: 'Enter Spec Uuid',\n        width: '25%',\n      },\n    ],\n  },\n];\n","import { Error as ServerError } from 'grpc-web';\nimport { QueryClient as WasmQueryClient } from \"@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/query_grpc_web_pb\";\nimport { QuerySmartContractStateRequest } from \"@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/query_pb\";\nimport { GRPC_URL } from '../consts/network';\nimport { QueryClient as NameQueryClient } from \"@provenanceio/wallet-lib/lib/proto/provenance/name/v1/query_grpc_web_pb\";\nimport { QueryResolveRequest } from \"@provenanceio/wallet-lib/lib/proto/provenance/name/v1/query_pb\";\n\nexport class WasmService {\n    nameQueryClient: NameQueryClient = new NameQueryClient(GRPC_URL, null)\n    wasmQueryClient: WasmQueryClient = new WasmQueryClient(GRPC_URL, null)\n\n    lookupContractByName(name: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.nameQueryClient.resolve(new QueryResolveRequest().setName(name), null, (error: ServerError, res) => {\n                if (error) {\n                    reject(new Error(`wasmService.lookupContractByName error: Code: ${error.code} Message: ${error.message}`))\n                } else {\n                    resolve(res.getAddress())\n                }\n            })\n        })\n    }\n\n    queryWasmCustom<T, R>(contractAddress: string, query: T): Promise<R> {\n        return new Promise((resolve, reject) => {\n            const queryData = Buffer.from(JSON.stringify(query), \"utf-8\").toString(\"base64\")\n            this.wasmQueryClient.smartContractState(new QuerySmartContractStateRequest()\n                .setAddress(contractAddress)\n                .setQueryData(queryData)\n                , null, (error: ServerError, res) => {\n                if (error) {\n                    reject(new Error(`wasmService.queryWasmCustom error: Code: ${error.code} Message: ${error.message}`))\n                } else {\n                    resolve(JSON.parse(Buffer.from(res.getData_asU8()).toString('utf-8')))\n                }\n            })\n        })\n    }\n}","import {\n    NameMetaData,\n    QueryAddressByName,\n    QueryAddressByNameResponse,\n    QueryNamesByAddress,\n    QueryNamesByAddressResponse,\n    QuerySettingsResponse,\n    SearchNamesQueryResponse,\n    SearchNamesRequest,\n} from 'models';\nimport { WasmService } from 'services';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb'\nimport { Coin } from '@provenanceio/wallet-lib/lib/proto/cosmos/base/v1beta1/coin_pb'\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb'\nimport { QuerySettings, RegisterName } from '../models/NameContract';\nimport { FEE_DENOM } from 'consts';\n\nexport class NameContractService {\n    wasmService = new WasmService()\n    contractAddress: string | null = null\n    rootName: string\n\n    constructor(rootName: string) {\n        this.rootName = rootName\n    }\n\n    async getContractAddress(): Promise<string> {\n        if (this.contractAddress != null) {\n            return this.contractAddress\n        }\n        this.contractAddress = await this.wasmService.lookupContractByName(this.rootName)\n        return this.contractAddress\n    }\n\n    async getContractConfig(): Promise<QuerySettingsResponse> {\n        return this.wasmService.queryWasmCustom<QuerySettings, QuerySettingsResponse>(await this.getContractAddress(), new QuerySettings())\n    }\n\n    async listNames(address: string): Promise<string[]> {\n        const queryRes = await this.wasmService.queryWasmCustom<QueryNamesByAddress, QueryNamesByAddressResponse>(await this.getContractAddress(), new QueryNamesByAddress(address))\n        \n        return queryRes.names\n    }\n\n    async resolveName(name: string): Promise<string> {\n        const queryRes = await this.wasmService.queryWasmCustom<QueryAddressByName, QueryAddressByNameResponse>(await this.getContractAddress(), new QueryAddressByName(name))\n        \n        return queryRes.address\n    }\n\n    async searchNames(search: string): Promise<NameMetaData[]> {\n        const queryRes = await this.wasmService.queryWasmCustom<SearchNamesRequest, SearchNamesQueryResponse>(await this.getContractAddress(), new SearchNamesRequest(search));\n\n        return queryRes.names;\n    }\n\n    async generateNameRegisterBase64Message(name: string, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        \n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new RegisterName().setName(name).toJson(), 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(contractConfig.fee_amount).setDenom(FEE_DENOM)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        const any = new Any()\n            .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n            .setValue(message.serializeBinary());\n        return Buffer.from(any.serializeBinary()).toString(\"base64\");\n    }\n}\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Loading } from 'Components';\n\nconst StyledButton = styled.button`\n  flex-basis: ${({ width }) => width };\n  ${({ width }) => width === 'auto' && 'min-width: 150px' };\n  align-items: center;\n  background: ${({ color }) => color };\n  white-space: nowrap;\n  border-radius: 6px;\n  border: 1px solid ${({ color }) => color };\n  text-shadow: 0 1px 0px rgba(0, 0, 0, 0.5), 0 -1px 0px rgba(0, 0, 0, 0.5), 1px 0 0px rgba(0, 0, 0, 0.5), -1px 0 0px rgba(0, 0, 0, 0.5);\n  color: white;\n  cursor: ${({ disabled }) => disabled ? 'not-allowed' : 'pointer' };\n  display: flex;\n  justify-content: center;\n  letter-spacing: 0.07rem;\n  transition: 250ms all;\n  user-select: none;\n  font-size: 1.2rem;\n  height: 40px;\n  padding: 0 30px;\n  &:hover:not(:disabled) {\n    filter: contrast(200%);\n  }\n  &:active:not(:disabled) {\n    filter: contrast(90%);\n  }\n  &:disabled {\n    filter: grayscale(80%);\n  }\n`;\nconst ButtonContent = styled.div``;\n\nconst Button = ({ className, color, onClick, children, disabled, width, title, type, loading }) => {\n  const handleClick = () => {\n    if (!disabled) {\n      onClick();\n    }\n  }\n\n  return (\n    <StyledButton\n      title={title}\n      className={className}\n      onClick={handleClick}\n      color={color.toUpperCase()}\n      onKeyPress={(e) => {\n        if (e.key === 'Enter') {\n          handleClick();\n        }\n      }}\n      disabled={disabled || loading}\n      width={width}\n      type={type}\n    >\n      <ButtonContent>{loading ? <Loading /> : children}</ButtonContent>\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  width: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n};\nButton.defaultProps = {\n  className: '',\n  color: '#42368E',\n  onClick: () => {},\n  disabled: false,\n  width: 'auto',\n  title: '',\n  type: 'button',\n  loading: false,\n};\n\nexport default Button;","import { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst PopupContainer = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  z-index: 100;\n`;\nconst SlideInAnimation = keyframes`\n  from { transform: translate(0, -100%); }\n  to { transform: translate(0, 0); }\n`;\nconst SlideOutAnimation = keyframes`\n  from { transform: translate(0, 0); }\n  to { transform: translate(0, -100%); }\n`;\n\nconst PopupContent = styled.div`\n  padding: 20px;\n  width: 100%;\n  background: ${({ status }) => {\n    if (status === 'error' || status === 'failure') return '#FFAAAA';\n    if (status === 'warning') return '#FFFFAA';\n    if (status === 'success') return '#AAFFAA';\n    return '#DDDDDD';\n  }};\n  box-shadow: '1px 1px 4px 1px rgba(0,0,0,0.10)';\n  border-radius: 0 0 3px 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  animation: 250ms linear ${({ isClosing }) => isClosing ? SlideOutAnimation : SlideInAnimation };\n  animation-fill-mode: both;\n  opacity: 0.95;\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-size: 3rem;\n  transform: rotate(45deg);\n  cursor: pointer;\n`;\nconst Content = styled.div`\n  font-size: 1.4rem;\n  font-weight: 700;\n`;\n\nconst Popup = ({ className, children, onClose, status, delay }) => {\n  const [isClosing, setIsClosing] = useState(false);\n  \n  useEffect(() => {\n    let delayCloseTimeout = '';\n    // Popup has just opened/been shown\n    if (!isClosing) {\n      // After delay, show slide up animation, then close self\n      delayCloseTimeout = setTimeout(() => { setIsClosing(true); }, delay);\n    } else {\n      // Popup is already closing, wait 1s to give time for the animation to finish\n      setTimeout(() => { onClose() }, 1000);\n    }\n    return () => {\n      // Make sure to clear the timeout if this closes before it runs\n      if (delayCloseTimeout) { clearTimeout(delayCloseTimeout); }\n    }\n  }, [isClosing, onClose, delay]);\n\n  return (\n    <PopupContainer className={className}>\n      <PopupContent status={status.toLowerCase()} isClosing={isClosing}>\n        <CloseIcon onClick={() => setIsClosing(true)}>+</CloseIcon>\n        <Content>{children}</Content>\n      </PopupContent>\n    </PopupContainer>\n  );\n};\n\nPopup.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  status: PropTypes.string,\n  delay: PropTypes.number,\n};\nPopup.defaultProps = {\n  className: '',\n  children: null,\n  onClose: () => {},\n  status: 'warning',\n  delay: 2000,\n};\n\nexport default Popup;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\n\nconst InputContainer = styled.div`\n  position: relative;\n  flex-basis: ${({ width }) => width};\n  display: flex;\n`;\nconst StyledInput = styled.input`\n  padding: 4px 10px;\n  height: 30px;\n  width: 100%;\n  box-sizing: content-box;\n  border-radius: 0;\n  margin-right: 4px;\n  margin-bottom: 10px;\n  border: 1px solid ${Colors.DARK};\n`;\nconst Label = styled.label`\n  font-size: 1rem;\n  font-weight: 700;\n  position: absolute;\n  top: -16px;\n  left: 0;\n`;\n\nconst Input = ({\n  className,\n  label,\n  value,\n  onChange,\n  placeholder,\n  width,\n  disabled,\n}) => (\n  <InputContainer width={width} className={className}>\n    {label && <Label>{label}</Label>}\n    <StyledInput\n      value={value}\n      placeholder={placeholder}\n      onChange={({ target }) => onChange(target.value)}\n      disabled={disabled}\n    />\n  </InputContainer>\n);\n\nInput.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n};\nInput.defaultProps = {\n  className: \"\",\n  width: \"100%\",\n  label: \"\",\n  value: \"\",\n  onChange: () => {},\n  placeholder: \"Enter Value\",\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Svg = styled.svg`\n  margin: auto;\n  display: block;\n`;\n\nconst Loading = ({ className, color, height, width }) => (\n  <Svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 100 100\"\n    preserveAspectRatio=\"xMidYMid\"\n    className={className}\n    height={height}\n    width={width}\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"10\"\n      r=\"35\"\n      strokeDasharray=\"164.93361431346415 56.97787143782138\"\n    >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        />\n    </circle>\n</Svg>\n);\n\nLoading.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n};\nLoading.defaultProps = {\n  className: '',\n  color: '#eeeeee',\n  height: '20px',\n  width: '20px',\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\n\nconst Container = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst Group = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  flex-basis: 100%;\n`;\nconst SelectContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\nconst StyledSelect = styled.select`\n  width: 100%;\n  padding: 14px 18px;\n  border-radius: 4px;\n  margin: 0;\n  border: 1px solid ${Colors.DARK};\n  font-size: 1.4rem;\n  flex-grow: ${({ type }) => (type === \"radio\" ? \"initial\" : \"1\")};\n  font-weight: bold;\n  background: ${Colors.LIGHT};\n  cursor: pointer;\n  color: ${Colors.DARK};\n  &:focus,\n  &:focus-visible,\n  &:active {\n    outline-color: ${Colors.DARK};\n  }\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nconst DropdownIcon = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 18px;\n  color: ${Colors.TEXT};\n  pointer-events: none;\n  cursor: pointer;\n  font-size: 1.8rem;\n  text-align: middle;\n  font-weight: bold;\n`;\nconst Label = styled.label`\n  margin-bottom: 16px;\n  font-weight: bold;\n  font-size: 1.8rem;\n  display: inline-block;\n  color: #333333;\n`;\n\nconst Dropdown = ({\n  className,\n  label,\n  options,\n  name,\n  value: initialValue,\n  onChange,\n}) => {\n  const renderOptions = () =>\n    options.map((title, index) => (\n      <option key={title} value={title} disabled={index === 0}>\n        {title}\n      </option>\n    ));\n\n  return (\n    <Container className={className}>\n      {label && <Label htmlFor={name}>{label}</Label>}\n      <Group>\n        <SelectContainer>\n          <StyledSelect\n            value={initialValue || options[0]}\n            onChange={({ target }) => onChange(target.value)}\n          >\n            {renderOptions()}\n          </StyledSelect>\n          <DropdownIcon>^</DropdownIcon>\n        </SelectContainer>\n      </Group>\n    </Container>\n  );\n};\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.node,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nDropdown.defaultProps = {\n  className: \"\",\n  label: \"\",\n  value: null,\n};\n\nexport default Dropdown;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  padding: 20px;\n  border: 2px solid ${({ color }) => color };\n  background: ${({ color, isLoading }) => isLoading ? '#CCCCCC' : `${color}50` };\n  border-radius: 5px;\n  display: flex;\n  max-width: 100%;\n  align-items: center;\n  justify-content: ${({ justify }) => justify };\n  ${({ noMargin }) => !noMargin && 'margin-bottom: 30px;' }\n  box-shadow: 1px 1px 3px 1px ${({ color }) => color };\n`;\n\nexport const ActionContainer = ({ children, color, justify, loading, noMargin }) => (\n  <Container color={color} justify={justify} isLoading={loading} noMargin={noMargin}>{children}</Container>\n);\n\nActionContainer.propTypes = {\n  color: PropTypes.string,\n  children: PropTypes.node,\n  justify: PropTypes.string,\n  loading: PropTypes.bool,\n  noMargin: PropTypes.bool,\n};\nActionContainer.defaultProps = {\n  color: '#42368E',\n  children: null,\n  justify: 'center',\n  loading: false,\n  noMargin: false,\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  WINDOW_MESSAGES,\n  useWalletConnect,\n} from \"@provenanceio/walletconnect-js\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\n\nconst windowMessageLookup = (windowMessage) => [\n  `${WINDOW_MESSAGES[`${windowMessage}_COMPLETE`]}`,\n  `${WINDOW_MESSAGES[`${windowMessage}_FAILED`]}`,\n];\n\nexport const Action = ({\n  method,\n  setPopup,\n  fields,\n  buttonTxt,\n  windowMessage,\n}) => {\n  const { walletConnectService, walletConnectState } = useWalletConnect();\n  // Get loading state for specific method\n  const loading = walletConnectState[`${method}Loading`];\n  // Get complete and failed messages\n  const [windowMsgComplete, windowMsgFailed] =\n    windowMessageLookup(windowMessage);\n  // Build state object from fields data (fields are an array of obj, see propTypes)\n  const initialInputValues = {};\n  fields.forEach(({ name, value }) => {\n    initialInputValues[name] = value;\n  });\n  const [inputValues, setInputValues] = useState(initialInputValues);\n  // Create all event listeners for this method\n  useEffect(() => {\n    // Delegate Hash Events\n    walletConnectService.addListener(windowMsgComplete, (result) => {\n      console.log(`WalletConnectJS | ${method} Complete | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Complete! See console for result details`,\n        \"success\",\n        5000\n      );\n    });\n    walletConnectService.addListener(windowMsgFailed, (result) => {\n      const { error } = result;\n      console.log(`WalletConnectJS | ${method} Failed | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Failed! ${error} | See console for more details`,\n        \"failure\",\n        5000\n      );\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(windowMsgComplete);\n      walletConnectService.removeAllListeners(windowMsgFailed);\n    };\n  }, [\n    walletConnectService,\n    setPopup,\n    windowMsgComplete,\n    windowMsgFailed,\n    method,\n  ]);\n\n  const changeInputValue = (name, value) => {\n    const newInputValues = { ...inputValues };\n    newInputValues[name] = value;\n    setInputValues(newInputValues);\n  };\n\n  const renderInputs = () =>\n    fields.map(({ name, width, label, placeholder }) => (\n      <Input\n        key={name}\n        width={width}\n        value={inputValues[name]}\n        label={label}\n        placeholder={placeholder}\n        onChange={(value) => changeInputValue(name, value)}\n      />\n    ));\n\n  // If we only have a single, send the value it without the key (as itself, non obj)\n  const getSendData = () =>\n    Object.keys(inputValues).length > 1\n      ? inputValues\n      : inputValues[Object.keys(inputValues)[0]];\n\n  return (\n    <ActionContainer loading={loading}>\n      {renderInputs()}\n      <Button\n        loading={loading}\n        onClick={() => walletConnectService[method](getSendData())}\n      >\n        {buttonTxt}\n      </Button>\n    </ActionContainer>\n  );\n};\n\nAction.propTypes = {\n  method: PropTypes.string.isRequired,\n  setPopup: PropTypes.func.isRequired,\n  fields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      placeholder: PropTypes.string,\n      width: PropTypes.string,\n    })\n  ),\n  buttonTxt: PropTypes.string.isRequired,\n  windowMessage: PropTypes.string.isRequired,\n};\n\nAction.defaultProps = {\n  fields: [],\n};\n","import { useEffect } from 'react';\nimport { WINDOW_MESSAGES } from '@provenanceio/walletconnect-js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from 'Components';\nimport { ActionContainer } from './ActionContainer';\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n`;\nexport const Connect = ({ walletConnectService, setPopup }) => {\n  const color = '#498AFD';\n\n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.CONNECTED, (result) => {\n      console.log('WalletConnectJS | Connected | Result: ', result); // eslint-disable-line no-console\n      setPopup('Wallet Connected', 'success');\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.CONNECTED);\n    }\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} noMargin>\n      <Info>Connect Wallet</Info>\n      <Button width=\"20%\" color={color} onClick={walletConnectService.connect}>Connect</Button>\n    </ActionContainer>\n  );\n};\n\nConnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    connect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { WINDOW_MESSAGES } from '@provenanceio/walletconnect-js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from 'Components';\nimport { ActionContainer } from './ActionContainer';\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n`;\nexport const Disconnect = ({ walletConnectService, setPopup }) => {\n  const color = '#FFAAAA';\n  \n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.DISCONNECT, (result) => {\n      console.log('WalletConnectJS | Disconnect | Result: ', result); // eslint-disable-line no-console\n      setPopup('Wallet Disconnected', 'failure');\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.DISCONNECT);\n    }\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} justify=\"space-between\">\n      <Info>Disconnect the connected wallet</Info>\n      <Button width=\"20%\" color={color} onClick={walletConnectService.disconnect}>Disconnect</Button>\n    </ActionContainer>\n  );\n};\n\nDisconnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    disconnect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  font-size: 3rem;\n  line-height: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.25rem;\n  margin-bottom: 40px;\n  transition: 6s all;\n`;\nexport const SubHeader = styled.h2`\n  font-size: 2rem;\n  line-height: 2rem;\n  font-weight: bold;\n`;","import { FunctionComponent, useState } from \"react\";\nimport { SubHeader } from 'Components/Headers';\nimport { Button, Input } from 'Components';\nimport styled from \"styled-components\";\n\ninterface RegisterNameProps {\n    onRegister: (s: string) => Promise<any>\n}\n\nexport const RegisterName: FunctionComponent<RegisterNameProps> = ({ onRegister }) => {\n    const [newName, setNewName] = useState(\"\");\n    const [registering, setRegistering] = useState(false)\n    const nameValid = newName.trim() != ''\n\n    const handleRegistration = () => {\n        setRegistering(true)\n        onRegister(newName).then(() => {\n            setNewName('')\n        }).finally(() => {\n            setRegistering(false)\n        })\n    }\n\n    return <RegisterWrapper>\n        <SubHeader>Register a new name</SubHeader>\n        <form>\n            <Input disabled={registering} value={newName} onChange={(n) => setNewName(n)} />\n            <Button disabled={registering || !nameValid} type=\"submit\" onClick={handleRegistration}>Register</Button>\n        </form>\n    </RegisterWrapper>\n}\n\nconst RegisterWrapper = styled.div`\n    margin-bottom: 20px;\n`","import { QueryAllBalancesResponse } from '@provenanceio/wallet-lib/lib/proto/cosmos/bank/v1beta1/query_pb';\n\nexport class ConversionUtil {\n    static getHashBalance(balanceResponse?: QueryAllBalancesResponse.AsObject): number | null {\n        if (!balanceResponse) {\n            return null;\n        }\n        let nhash = balanceResponse.balancesList.find(coin => coin.denom === \"nhash\");\n        if (!nhash?.amount) {\n            return null;\n        }\n        try {\n            return this.convertNanoHashToHash(+nhash.amount);\n        } catch (error) {\n            console.log(`Failed to convert derived nano amount [${nhash?.amount}] to hash: ${error}`);\n            return null;\n        }\n    }\n\n    static convertNanoHashToHash(nanoHash: number): number {\n        return nanoHash / 1000000000;\n    }\n}\n","import styled from \"styled-components\";\nimport { Component, FunctionComponent, useState } from 'react';\nimport { Colors } from \"consts\";\n\nexport interface Tab {\n    title: string,\n    element: Component\n}\n\nexport interface TabContainerProps {\n    tabs: Tab[]\n}\n\nconst TabContainerWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n`\n\nconst TabHeaderWrapper = styled.div`\n\n`\n\ninterface TabHeaderProps {\n    active?: boolean\n}\n\nconst TabHeader = styled.button<TabHeaderProps>`\n    border: 1px solid ${Colors.DARK};\n    border-bottom: none;\n    display: inline-block;\n    padding: 4px;\n    background: ${({ active }) => active ? Colors.DARKEN : Colors.LIGHT};\n    cursor: pointer;\n    &:not(:last-child) {\n        border-right: none;\n    }\n    &:first-child {\n        border-top-left-radius: 5px;\n    }\n    &:last-child {\n        border-top-right-radius: 5px;\n    }\n    &:hover {\n        background: ${Colors.DARKEN};\n    }\n`\n\nconst TabWrapper = styled.div`\n    padding: 10px;\n    background-color: ${Colors.LIGHT};\n\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 1px solid ${Colors.DARK};\n`\n\nexport const TabContainer: FunctionComponent<TabContainerProps> = ({ tabs }) => {\n    const [selected, setSelected] = useState(0)\n    return <TabContainerWrapper>\n        <TabHeaderWrapper>{tabs.map((tab, i) => <TabHeader active={selected === i} key={`tab-${i}`} onClick={() => setSelected(i)}>{tab.title}</TabHeader>)}</TabHeaderWrapper>\n        <TabWrapper>{tabs[selected].element}</TabWrapper>\n    </TabContainerWrapper>\n}\n","import { Colors } from \"consts\";\nimport styled from \"styled-components\";\n\nexport const NameList = styled.ul`\nlist-style-type: none;\npadding-left: 0;\nborder-radius: 5px;\nborder: 1px solid ${Colors.DARKEN};\noverflow: hidden;\n`;\nexport const Name = styled.li`\nfont-weight: 600;\nfont-size: 1.2rem;\npadding: 10px;\nbackground: white;\n&:not(:last-child) {\n  border-bottom: 1px solid ${Colors.DARKEN};\n}\n`;","import { Button, Dropdown, Input } from \"Components\";\nimport { SubHeader } from \"Components/Headers\";\nimport { Name, NameList } from \"Components/NameList\";\nimport { Colors, ROOT_NAME } from \"consts\";\nimport { FunctionComponent, useState } from \"react\";\nimport { NameContractService } from \"services\";\nimport styled from \"styled-components\";\n\nexport interface NameLookupProps {\n\n}\n\nconst Results = styled.div`\n\n`\n\nconst SearchError = styled.div`\n    background: ${Colors.WARN};\n    padding: 10px;\n    font-size: 1.5rem;\n    margin: 10px 0;\n    border-radius: 5px;\n    color: ${Colors.LIGHT};\n`\n\nconst NameLookupWrapper = styled.div`\n    max-width: 600px;\n`\nexport const NameLookup: FunctionComponent<NameLookupProps> = ({ }) => {\n    const [value, setValue] = useState('')\n    const [submitting, setSubmitting] = useState(false)\n    const [lookupType, setLookupType] = useState('name')\n    const valueValid = (val: string) => val.trim() != ''\n\n    const [results, setResults] = useState<string[]>([])\n    const [additionalNames, setAdditionalNames] = useState<string[]>([])\n    const [resultTerm, setResultTerm] = useState('')\n    const [searchError, setSearchError] = useState('')\n\n    const nameService = new NameContractService(ROOT_NAME)\n\n    const handleLookup = async () => {\n        setSubmitting(true)\n        setResults([])\n        setResultTerm(value)\n        setSearchError('')\n        setAdditionalNames([])\n        try {\n            if (lookupType == 'name') {\n                const address = await nameService.resolveName(value)\n                setResults([address])\n                const otherNames = await nameService.listNames(address)\n                setAdditionalNames(otherNames.filter(name => name != value))\n            } else {\n                const names = await nameService.listNames(value)\n                setResults(names)\n            }\n            setValue('')\n            setSubmitting(false)\n        } catch (e) {\n            if (e instanceof Error) {\n                setSearchError(e.message)\n            }\n            setSubmitting(false)\n        }\n    }\n\n    return <NameLookupWrapper>\n        <Dropdown label=\"lookup type\" name=\"lookupType\" value={lookupType} options={['select a lookup type', 'name', 'address']} onChange={(t) => setLookupType(t)}></Dropdown>\n        <form>\n            <Input label={lookupType.slice(0, 1).toUpperCase() + lookupType.slice(1)} value={value} onChange={(v) => setValue(v)} />\n            <Button type=\"submit\" disabled={!valueValid(value) || submitting} onClick={() => handleLookup()}>Lookup</Button>\n        </form>\n        {searchError && <SearchError>{searchError}</SearchError>}\n        {!searchError && results.length > 0 && <Results>\n            <SubHeader>Results for {resultTerm}:</SubHeader>\n            <NameList>\n                {results.map((res, i) => <Name key={`res-${i}`}>{res}</Name>)}\n            </NameList>\n        </Results>}\n        {!searchError && additionalNames.length > 0 && <Results>\n            <SubHeader>Additional Names:</SubHeader>\n            <NameList>\n                {additionalNames.map((res, i) => <Name key={`additional-${i}`}>{res}</Name>)}\n            </NameList>\n        </Results>}\n    </NameLookupWrapper>\n}\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport {EXPLORER_URL} from \"consts\";\n\nconst Text = styled.p`\n  font-size: 1.6rem;\n  line-height: 3rem;\n  margin: 0;\n`;\n\nconst AddressLink = ({\n    className,\n    address,\n}) => {\n    return <Text className={className}>\n        Address:{\" \"}\n        <a\n            href={`${EXPLORER_URL}/accounts/${address}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n        >\n            {address}\n        </a>\n    </Text>;\n};\n\nAddressLink.propTypes = {\n    className: PropTypes.string,\n    address: PropTypes.string.isRequired,\n};\n\nAddressLink.defaultProps = {\n    className: \"\",\n};\n\nexport default AddressLink;\n","import styled from 'styled-components';\n\nexport const BigParagraph = styled.p`\n  font-size: 1.6rem;\n  line-height: 3rem;\n  margin: 0;\n`;\n","import { Colors } from \"consts\";\nimport styled from \"styled-components\";\nimport {FunctionComponent, useState} from \"react\";\nimport {NameMetaData} from \"models\";\nimport {NameContractService} from \"services\";\nimport {ROOT_NAME} from \"consts\";\nimport { Input } from \"Components\";\nimport { SubHeader } from \"Components/Headers\";\nimport {Name, NameList} from \"Components/NameList\";\nimport {useDebouncedCallback} from \"use-debounce\";\nimport AddressLink from \"Components/AddressLink\";\nimport {BigParagraph} from \"Components/Display\";\n\nexport interface NameSearchProps {\n\n}\n\nconst SearchResults = styled.div``;\n\nconst SearchError = styled.div`\n    background: ${Colors.WARN};\n    padding: 10px;\n    font-size: 1.5rem;\n    margin: 10px 0;\n    border-radius: 5px;\n    color: ${Colors.LIGHT};\n`;\n\nconst NameSearchWrapper = styled.div`\n    max-width: 600px;\n`;\n\nconst isSearchValid = (val: string) => val.trim() !== '';\n\nexport const NameSearch: FunctionComponent<NameSearchProps> = ({ }) => {\n    const [searchValue, setSearchValue] = useState('');\n    const [searchResults, setSearchResults] = useState<NameMetaData[]>([]);\n    const [searchError, setSearchError] = useState('');\n\n    const nameService = new NameContractService(ROOT_NAME);\n\n    const debouncedSearch = useDebouncedCallback((target: string) => {\n        setSearchValue(target);\n        if (!isSearchValid(target)) {\n            setSearchResults([]);\n            setSearchError('');\n            return;\n        }\n        setSearchResults([]);\n        setSearchError('');\n        nameService.searchNames(target)\n            .then(searchResultArray => {\n                if (searchResultArray.length === 0) {\n                    setSearchError(`No results found for \"${target}\"`);\n                }\n                setSearchResults(searchResultArray);\n            })\n            .catch(e => {\n                if (e instanceof Error) {\n                    setSearchError(e.message);\n                }\n            });\n    }, 500);\n\n    const handleSearchTextInput = (text: string) => {\n        setSearchValue(text);\n        debouncedSearch(text);\n    };\n\n    return <NameSearchWrapper>\n        <form>\n            <Input label={\"Search for names containing\"} value={searchValue} onChange={handleSearchTextInput} />\n        </form>\n        {searchError && <SearchError>{searchError}</SearchError>}\n        {!searchError && searchResults.length > 0 && <SearchResults>\n            <SubHeader>Results for \"{searchValue}\":</SubHeader>\n            <NameList>\n                {searchResults.map((result, i) => <Name key={`result-${i}`}>\n                    <BigParagraph>Name: {result.name}</BigParagraph>\n                    <br />\n                    <AddressLink address={result.address} />\n                </Name>)}\n            </NameList>\n        </SearchResults>}\n    </NameSearchWrapper>;\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  useWalletConnect,\n  QRCodeModal,\n  WINDOW_MESSAGES as WINDOW_MESSAGE,\n} from \"@provenanceio/walletconnect-js\";\nimport styled from \"styled-components\";\nimport { Connect, Disconnect, Popup } from \"Components\";\nimport { ROOT_NAME } from \"consts\";\nimport { REACT_APP_WCJS_VERSION } from \"./version\"; // eslint-disable-line\nimport { useWallet } from \"@provenanceio/wallet-lib\";\nimport { TEXT_ACCENT, PRIMARY_BACKGROUND, TEXT } from \"./consts/colors\";\nimport { Header, SubHeader } from \"Components/Headers\";\nimport { RegisterName } from \"Components/RegisterName\";\nimport { NameContractService } from \"services\";\nimport { ConversionUtil } from \"./util/ConversionUtil\";\nimport { TabContainer } from \"Components/Tabs\";\nimport { NameLookup } from \"Components/NameLookup\";\nimport { Name, NameList } from \"Components/NameList\";\nimport { NameSearch } from \"Components/NameSearch\";\nimport AddressLink from \"Components/AddressLink\";\nimport { BigParagraph } from \"Components/Display\";\n\nconst Wrapper = styled.div`\n  background: ${PRIMARY_BACKGROUND};\n\n  a {\n    color: ${TEXT_ACCENT};\n    &:hover {\n      color: ${TEXT};\n    }\n  }\n`;\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  /* justify-content: center; */\n  max-width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\nconst Content = styled.div`\n  min-width: 600px;\n  padding: 30px 50px;\n  border-radius: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const App = () => {\n  const [popupContent, setPopupContent] = useState(\"\");\n  const [popupStatus, setPopupStatus] = useState(\"success\");\n  const [popupDuration, setPopupDuration] = useState(2500);\n  const [hashAmount, setHashAmount] = useState(null);\n  const [listenersAdded, setListenersAdded] = useState(false);\n\n  const { walletConnectService: wcs, walletConnectState } = useWalletConnect();\n  const { address, connected, peer } = walletConnectState;\n\n  const setPopup = (message, status, duration) => {\n    setPopupContent(message);\n    if (status) {\n      setPopupStatus(status);\n    }\n    if (duration) {\n      setPopupDuration(duration);\n    }\n  };\n\n  const nameContractService = new NameContractService(ROOT_NAME);\n  const [registeredNames, setRegisteredNames] = useState([]);\n\n  const fetchNames = () => {\n    if (address) {\n      nameContractService\n        .listNames(address)\n        .then((names) => setRegisteredNames(names));\n    } else {\n      setRegisteredNames([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchNames();\n  }, [address]);\n\n  const { grpcService } = useWallet();\n\n  const fetchBalance = () => {\n    if (address) {\n      grpcService.getBalancesList(address).then((balances) => {\n        let hashAmount = ConversionUtil.getHashBalance(balances);\n        if (hashAmount) {\n          setHashAmount(hashAmount);\n        }\n      });\n    } else {\n      setHashAmount(null);\n    }\n  };\n  useEffect(() => {\n    fetchBalance();\n  }, [address]);\n\n  useEffect(() => {\n    if (!listenersAdded) {\n      console.log(\"Adding event listeners\");\n      setListenersAdded(true);\n      wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_COMPLETE, (result) => {\n        console.log(\n          `WalletConnectJS | Custom Action Complete | Result: `,\n          result\n        );\n        fetchNames();\n        fetchBalance();\n      });\n\n      wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_FAILED, (result) => {\n        const { error } = result;\n        console.log(\n          `WalletConnectJS | Custom Action Failed | result, error: `,\n          result,\n          error\n        );\n      });\n    }\n  }, [listenersAdded]);\n\n  return (\n    <Wrapper>\n      <HomeContainer>\n        {popupContent && (\n          <Popup\n            delay={popupDuration}\n            onClose={() => setPopupContent(\"\")}\n            status={popupStatus}\n          >\n            {popupContent}\n          </Popup>\n        )}\n        <Header>Names \"R\" Us</Header>\n        <Content>\n          {connected ? (\n            <>\n              <TabContainer\n                tabs={[\n                  {\n                    title: \"Your Names\",\n                    element: (\n                      <>\n                        {peer?.name && (\n                          <BigParagraph>\n                            Wallet:{\" \"}\n                            {peer.url ? (\n                              <a\n                                href={peer.url}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                {peer.name}\n                              </a>\n                            ) : (\n                              peer.name\n                            )}\n                          </BigParagraph>\n                        )}\n                        <AddressLink address={address} />\n                        {hashAmount && (\n                          <BigParagraph>\n                            Hash Balance: {hashAmount}\n                          </BigParagraph>\n                        )}\n                        <SubHeader>Your registered names</SubHeader>\n                        <NameList>\n                          {registeredNames.map((name) => (\n                            <Name key={name}>{name}</Name>\n                          ))}\n                        </NameList>\n                        <RegisterName\n                          onRegister={async (name) => {\n                            return wcs.customAction({\n                              message:\n                                await nameContractService.generateNameRegisterBase64Message(\n                                  name,\n                                  address\n                                ),\n                              description: `Register ${name} to ${address}`,\n                              method: \"provenance_sendTransaction\",\n                            });\n                          }}\n                        />\n                      </>\n                    ),\n                  },\n                  {\n                    title: \"Name Lookup\",\n                    element: <NameLookup />,\n                  },\n                  {\n                    title: \"Name Search\",\n                    element: <NameSearch />,\n                  },\n                ]}\n              />\n              <Disconnect walletConnectService={wcs} setPopup={setPopup} />\n            </>\n          ) : (\n            <Connect walletConnectService={wcs} setPopup={setPopup} />\n          )}\n        </Content>\n        <QRCodeModal\n          walletConnectService={wcs}\n          walletConnectState={walletConnectState}\n          title=\"Scan to initiate walletConnect-js session\"\n        />\n        <div>\n          WalletConnect-JS Version: {REACT_APP_WCJS_VERSION || \"??.??.??\"}\n        </div>\n      </HomeContainer>\n    </Wrapper>\n  );\n};\n","export const REACT_APP_WCJS_VERSION = \"1.0.2\"\n","import ReactDOM from \"react-dom\";\nimport { WalletConnectContextProvider } from \"@provenanceio/walletconnect-js\";\nimport { WalletContextProvider } from \"@provenanceio/wallet-lib\";\nimport { StrictMode } from \"react\";\nimport { App } from \"./App\";\n// Bring in Google Fonts and base styles\nimport \"./base.css\";\nimport { GRPC_URL, NETWORK, WALLET_URL } from \"./consts/network\";\n\nReactDOM.render(\n  <StrictMode>\n    <WalletConnectContextProvider network={NETWORK}>\n      <WalletContextProvider\n        grpcServiceAddress={GRPC_URL}\n        walletUrl={WALLET_URL}\n      >\n        <App />\n      </WalletContextProvider>\n    </WalletConnectContextProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const NETWORK = process.env.REACT_APP_NETWORK\nexport const PRODUCTION = NETWORK == 'mainnet'\nexport const EXPLORER_URL = PRODUCTION ? 'https://explorer.provenance.io' : 'https://explorer.test.provenance.io'\nexport const GRPC_URL = PRODUCTION ? 'https://wallet.provenance.io/proxy' : 'https://wallet.test.provenance.io/proxy'\n// export const GRPC_URL = 'http://localhost:8080'\nexport const WALLET_URL = PRODUCTION ? 'https://wallet.provenance.io' : 'https://wallet.test.provenance.io'\nexport const ROOT_NAME = 'wallettest3.pb'\nexport const FEE_DENOM = 'nhash'\n","export * from './WasmService'\nexport * from './NameContractService'","export const PRIMARY_BACKGROUND = '#F6F5F4'\nexport const TEXT = '#000'\nexport const TEXT_ACCENT = '#5184A4'\nexport const LIGHT = '#FFF'\nexport const DARKEN = '#EDEBE9'\nexport const DARK = '#655C53'\nexport const WARN = '#E53B10'","import { ContractMsg } from \"./ContractBase\"\n\nexport class QueryNamesByAddress {\n    query_names_by_address: {\n        address: string\n    }\n\n    constructor(address: string) {\n        this.query_names_by_address = { address }\n    }\n}\n\nexport interface QueryNamesByAddressResponse {\n    address: string,\n    names: string[]\n}\n\nexport class QueryAddressByName {\n    query_address_by_name: {\n        name: string\n    }\n\n    constructor(name: string) {\n        this.query_address_by_name = { name }\n    }\n}\n\nexport interface QueryAddressByNameResponse {\n    address: string,\n    name: string\n}\n\nexport class SearchNamesRequest {\n    search_for_names: {\n        search: string\n    }\n\n    constructor(search: string) {\n        this.search_for_names = { search };\n    }\n}\n\nexport class NameMetaData {\n    name: string\n    address: string\n\n    constructor(name: string, address: string) {\n        this.name = name;\n        this.address = address;\n    }\n}\n\nexport interface SearchNamesQueryResponse {\n    search: string,\n    names: NameMetaData[]\n}\n\nexport class QuerySettings {\n    query_request: {} = {}\n}\n\nexport interface QuerySettingsResponse {\n    name: string,\n    fee_amount: string,\n    fee_collection_address: string,\n}\n\nexport class RegisterName extends ContractMsg {\n    register: {\n        name: string\n    } = { name: '' }\n\n    setName(name: string): RegisterName {\n        this.register.name = name\n        return this\n    }\n}\n"],"sourceRoot":""}